# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import canrpc_pb2 as canrpc__pb2


class CANRPCServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendCAN = channel.unary_unary(
        '/CANRPCService/SendCAN',
        request_serializer=canrpc__pb2.SendCANArgs.SerializeToString,
        response_deserializer=canrpc__pb2.CAN.FromString,
        )
    self.ReadCAN = channel.unary_unary(
        '/CANRPCService/ReadCAN',
        request_serializer=canrpc__pb2.ReadCANArgs.SerializeToString,
        response_deserializer=canrpc__pb2.CAN.FromString,
        )


class CANRPCServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendCAN(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReadCAN(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CANRPCServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendCAN': grpc.unary_unary_rpc_method_handler(
          servicer.SendCAN,
          request_deserializer=canrpc__pb2.SendCANArgs.FromString,
          response_serializer=canrpc__pb2.CAN.SerializeToString,
      ),
      'ReadCAN': grpc.unary_unary_rpc_method_handler(
          servicer.ReadCAN,
          request_deserializer=canrpc__pb2.ReadCANArgs.FromString,
          response_serializer=canrpc__pb2.CAN.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CANRPCService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
