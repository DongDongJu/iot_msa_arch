// Code generated by protoc-gen-go. DO NOT EDIT.
// source: canrpc.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CAN struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Contents             []byte   `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CAN) Reset()         { *m = CAN{} }
func (m *CAN) String() string { return proto.CompactTextString(m) }
func (*CAN) ProtoMessage()    {}
func (*CAN) Descriptor() ([]byte, []int) {
	return fileDescriptor_22243678d7b0ccf8, []int{0}
}

func (m *CAN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAN.Unmarshal(m, b)
}
func (m *CAN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAN.Marshal(b, m, deterministic)
}
func (m *CAN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAN.Merge(m, src)
}
func (m *CAN) XXX_Size() int {
	return xxx_messageInfo_CAN.Size(m)
}
func (m *CAN) XXX_DiscardUnknown() {
	xxx_messageInfo_CAN.DiscardUnknown(m)
}

var xxx_messageInfo_CAN proto.InternalMessageInfo

func (m *CAN) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CAN) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type SendCANArgs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Contents             []byte   `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCANArgs) Reset()         { *m = SendCANArgs{} }
func (m *SendCANArgs) String() string { return proto.CompactTextString(m) }
func (*SendCANArgs) ProtoMessage()    {}
func (*SendCANArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_22243678d7b0ccf8, []int{1}
}

func (m *SendCANArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCANArgs.Unmarshal(m, b)
}
func (m *SendCANArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCANArgs.Marshal(b, m, deterministic)
}
func (m *SendCANArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCANArgs.Merge(m, src)
}
func (m *SendCANArgs) XXX_Size() int {
	return xxx_messageInfo_SendCANArgs.Size(m)
}
func (m *SendCANArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCANArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SendCANArgs proto.InternalMessageInfo

func (m *SendCANArgs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendCANArgs) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type ReadCANArgs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadCANArgs) Reset()         { *m = ReadCANArgs{} }
func (m *ReadCANArgs) String() string { return proto.CompactTextString(m) }
func (*ReadCANArgs) ProtoMessage()    {}
func (*ReadCANArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_22243678d7b0ccf8, []int{2}
}

func (m *ReadCANArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCANArgs.Unmarshal(m, b)
}
func (m *ReadCANArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCANArgs.Marshal(b, m, deterministic)
}
func (m *ReadCANArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCANArgs.Merge(m, src)
}
func (m *ReadCANArgs) XXX_Size() int {
	return xxx_messageInfo_ReadCANArgs.Size(m)
}
func (m *ReadCANArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCANArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCANArgs proto.InternalMessageInfo

func (m *ReadCANArgs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CAN)(nil), "CAN")
	proto.RegisterType((*SendCANArgs)(nil), "SendCANArgs")
	proto.RegisterType((*ReadCANArgs)(nil), "ReadCANArgs")
}

func init() { proto.RegisterFile("canrpc.proto", fileDescriptor_22243678d7b0ccf8) }

var fileDescriptor_22243678d7b0ccf8 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4e, 0xcc, 0x2b,
	0x2a, 0x48, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x32, 0xe4, 0x62, 0x76, 0x76, 0xf4, 0x13,
	0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c, 0x11,
	0x92, 0xe2, 0xe2, 0x48, 0xce, 0xcf, 0x2b, 0x49, 0xcd, 0x2b, 0x29, 0x96, 0x60, 0x52, 0x60, 0xd4,
	0xe0, 0x09, 0x82, 0xf3, 0x95, 0x2c, 0xb9, 0xb8, 0x83, 0x53, 0xf3, 0x52, 0x9c, 0x1d, 0xfd, 0x1c,
	0x8b, 0xd2, 0x8b, 0x49, 0xd2, 0x2a, 0xcb, 0xc5, 0x1d, 0x94, 0x9a, 0x88, 0x4b, 0xab, 0x51, 0x20,
	0x17, 0xaf, 0xb3, 0xa3, 0x5f, 0x50, 0x80, 0x73, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90,
	0x3c, 0x17, 0x3b, 0xd4, 0x2a, 0x21, 0x1e, 0x3d, 0x24, 0x4b, 0xa5, 0x58, 0xf4, 0x9c, 0x1d, 0xfd,
	0x94, 0x18, 0x40, 0x0a, 0xa0, 0x06, 0x0a, 0xf1, 0xe8, 0x21, 0x19, 0x0d, 0x53, 0xe0, 0xc4, 0x16,
	0xc5, 0x92, 0x9b, 0x98, 0x99, 0x97, 0xc4, 0x06, 0xf6, 0xae, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x1e, 0x90, 0x6b, 0x04, 0xfe, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CANRPCServiceClient is the client API for CANRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CANRPCServiceClient interface {
	SendCAN(ctx context.Context, in *SendCANArgs, opts ...grpc.CallOption) (*CAN, error)
	ReadCAN(ctx context.Context, in *ReadCANArgs, opts ...grpc.CallOption) (*CAN, error)
}

type cANRPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewCANRPCServiceClient(cc *grpc.ClientConn) CANRPCServiceClient {
	return &cANRPCServiceClient{cc}
}

func (c *cANRPCServiceClient) SendCAN(ctx context.Context, in *SendCANArgs, opts ...grpc.CallOption) (*CAN, error) {
	out := new(CAN)
	err := c.cc.Invoke(ctx, "/CANRPCService/SendCAN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cANRPCServiceClient) ReadCAN(ctx context.Context, in *ReadCANArgs, opts ...grpc.CallOption) (*CAN, error) {
	out := new(CAN)
	err := c.cc.Invoke(ctx, "/CANRPCService/ReadCAN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CANRPCServiceServer is the server API for CANRPCService service.
type CANRPCServiceServer interface {
	SendCAN(context.Context, *SendCANArgs) (*CAN, error)
	ReadCAN(context.Context, *ReadCANArgs) (*CAN, error)
}

// UnimplementedCANRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCANRPCServiceServer struct {
}

func (*UnimplementedCANRPCServiceServer) SendCAN(ctx context.Context, req *SendCANArgs) (*CAN, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCAN not implemented")
}
func (*UnimplementedCANRPCServiceServer) ReadCAN(ctx context.Context, req *ReadCANArgs) (*CAN, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadCAN not implemented")
}

func RegisterCANRPCServiceServer(s *grpc.Server, srv CANRPCServiceServer) {
	s.RegisterService(&_CANRPCService_serviceDesc, srv)
}

func _CANRPCService_SendCAN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCANArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CANRPCServiceServer).SendCAN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CANRPCService/SendCAN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CANRPCServiceServer).SendCAN(ctx, req.(*SendCANArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _CANRPCService_ReadCAN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadCANArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CANRPCServiceServer).ReadCAN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CANRPCService/ReadCAN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CANRPCServiceServer).ReadCAN(ctx, req.(*ReadCANArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _CANRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CANRPCService",
	HandlerType: (*CANRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendCAN",
			Handler:    _CANRPCService_SendCAN_Handler,
		},
		{
			MethodName: "ReadCAN",
			Handler:    _CANRPCService_ReadCAN_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "canrpc.proto",
}
